---
import SiteListItem from '../../components/sites/SiteListItem.astro'
import { getSessionUser } from '../../firebase/server'
import { getFirestore } from 'firebase-admin/firestore'
import { SiteSchema } from '@schemas/Site'
import type { Site } from '@schemas/Site'
import { t } from 'src/utils/i18n'
import { extractFlowTime } from '../../firebase/helpers'
import Page from '@layouts/Page.astro'
import { FilterPanel } from '@components/solid/app/FilterPanel'

const db = getFirestore()
const sitesRef = db.collection('sites')

const snapshot = await sitesRef.where('hidden', '==', false).get()

if (snapshot.empty) {
  console.log('No matching documents.')
}
const sites: Array<Site> = []
snapshot.forEach((doc) => {
  if (!doc.exists) return
  sites.push(
    SiteSchema.parse({
      ...doc.data(),
      key: doc.id,
      flowTime: extractFlowTime(doc.data()),
    }),
  )
})

const user = await getSessionUser(Astro.cookies)
if (user?.uid) {
  const userSitesRef = db
    .collection('sites')
    .where('owners', 'array-contains', user.uid)
  const userSitesSnapshot = await userSitesRef.get()
  userSitesSnapshot.forEach((doc) => {
    if (!doc.exists) return
    if (sites.find((site) => site.key === doc.id)) return
    sites.push(
      SiteSchema.parse({
        ...doc.data(),
        key: doc.id,
        flowTime: extractFlowTime(doc.data()),
      }),
    )
  })
}

sites.sort((a, b) => {
  if (a.flowTime && b.flowTime) {
    return b.flowTime - a.flowTime
  }
  return 0
})

const filterOptions = {
  ll: "löllö",
  dd: "D&D"
}

const sortOptions = {
  flowTime: "Flow time",
  name: "Name",
}
---

<Page title={t('sites:siteList.title')} poster="/images/juno-viinikka-saana-viinikka-waawaa-small.webp">
  <div class="content-cards">
    <FilterPanel filterOptions={filterOptions} sortOptions={sortOptions} client:only="solid-js"/>
    {sites.map((site) => <SiteListItem site={site} />)}
  </div>
</Page>
